{"version":3,"file":"0.58012ff268cee5458ce3.hot-update.js","sources":["webpack:///src/app.js?bd9c","webpack:///src/config.js?9d9a","webpack:///src/states/state.js?442c","webpack:///src/sprites/textButton.js?b67f","webpack:///src/functions/getRandomInt.js?d519","webpack:///src/game_main.js?6363","webpack:///src/sprites/player.js?fa37","webpack:///src/sprites/staticAsset.js?c4a8","webpack:///src/states/Boot.js?34ea","webpack:///src/states/Game.js?2998","webpack:///src/states/Gameover.js?908a","webpack:///src/states/Splash.js?4fbc","webpack:///src/utils.js?2b4c"],"sourcesContent":["/*global fb*/\n\nimport React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Game from './game_main';\nimport state from './states/state';\n\nconst SERVER = 'http://localhost:8080/';\nconst facebookLogIn = () => {\n    // This is called with the results from from FB.getLoginStatus().\n    window.fbAsyncInit = () => {\n        FB.init({\n            appId: '113731382506643',\n            cookie: true, // enable cookies to allow the server to access\n            // the session\n            xfbml: true, // parse social plugins on this page\n            version: 'v2.8', // use graph api version 2.8\n        });\n\n        FB.getLoginStatus(response => {\n            //statusChangeCallback(response);\n            if (response.status === 'connected') {\n                FB.api('/me', response => {\n                    const signedInUserFacebookId = response.id;\n                    playerSignin(signedInUserFacebookId);\n                });\n            }\n        });\n    };\n\n    // Load the SDK asynchronously\n    (function(d, s, id) {\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) return;\n        js = d.createElement(s);\n        js.id = id;\n        js.src = '//connect.facebook.net/en_US/sdk.js';\n        fjs.parentNode.insertBefore(js, fjs);\n    })(document, 'script', 'facebook-jssdk');\n};\n\nconst startGame = () => {\n    $('#signinScreen').css('display', 'none');\n    $.ajax({\n        url: SERVER + 'highestScore',\n        type: 'GET',\n        success: data => {\n            state.gameHighestScore = data.result[0].highestScore;\n            //$('body').data('gameHighestScore', gameHighestScore);\n            const game = new Game();\n        },\n        error: e => {\n            console.log(e);\n        },\n    });\n};\n\nconst playerSignin = facebookId => {\n    //this ajax call checks if this is a first time player\n    $.ajax({\n        url: SERVER + 'users/facebookId/' + facebookId,\n        type: 'GET',\n        success: data => {\n            if (data.length === 0) {\n                let register = '';\n                register += '<p>Please enter a screen name</p>';\n                register += '<input id=\"inputScreenName\" type=\"text\" />';\n                register += '<button id=\"js-submitScreenName\" type=\"submit\">submit</button>';\n                $('#signinScreen').append(register);\n                $('#js-submitScreenName').click(() => {\n                    const newPlayer = {\n                        facebookId: facebookId,\n                        screenName: $('#inputScreenName').val(),\n                    };\n                    $.ajax({\n                        url: SERVER + 'users/',\n                        type: 'POST',\n                        contentType: 'application/json; charset=utf-8',\n                        data: JSON.stringify(newPlayer),\n                        success: player => {\n                            state.playerData = player;\n                            console.log(2);\n                            startGame();\n                        },\n                        error: e => {\n                            console.log(e);\n                        },\n                    });\n                });\n            } else {\n                startGame();\n            }\n        },\n        error: e => {\n            console.log(e);\n        },\n    });\n};\n\nconst { object, func } = PropTypes;\n\nclass App extends PureComponent {\n    /*\n    static PropTypes = {\n        gameHighestScore: object,\n        getGameHighestScore: func,\n        newPlayerRegistration: func,\n    };\n\n    static defaultProps = {\n        gameHighestScore: 0,\n        playerData: {},\n    };\n\n    state = {\n        playerData: {},\n    };\n    */\n\n    constructor() {\n        super();\n        this.playAsAGuest = this.playAsAGuest.bind(this);\n    }\n    playAsAGuest(event) {\n        event.preventDefault();\n        const guestPlayer = {\n            highestScore: 0,\n            screenName: 'Guest',\n        };\n        startGame();\n    }\n    componentWillMount() {\n        facebookLogIn();\n    }\n\n    render() {\n        return (\n            <div>\n                <input\n                    type=\"submit\"\n                    value=\"play as a Guest\"\n                    onClick={this.playAsAGuest}\n                />\n            </div>\n        );\n    }\n}\nexport default connect(storeState => ({\n    gameHighestScore: storeState.gameHighestScore,\n    playerData: storeState.playerData,\n}));\n\n\n\n// WEBPACK FOOTER //\n// src/app.js","const maxWidth = 760;\nconst maxHeight = 414;\nconst docElement = document.documentElement;\nconst width = docElement.clientWidth > maxWidth\n    ? maxWidth\n    : docElement.clientWidth;\nconst height = docElement.clientHeight > maxHeight\n    ? maxHeight\n    : docElement.clientHeight;\n\nexport default {\n    gameWidth: width,\n    gameHeight: height,\n    localStorageName: 'phaseres6webpack',\n};\n\n\n\n// WEBPACK FOOTER //\n// src/config.js","export default {\n    gameHighestScore: 1,\n    playerData: {},\n    speed: 1,\n};\n\n\n\n// WEBPACK FOOTER //\n// src/states/state.js","export default class TextButton extends Phaser.Button {\n    constructor(\n        {\n            game,\n            x,\n            y,\n            asset,\n            callback,\n            callbackContext,\n            overFrame,\n            outFrame,\n            downFrame,\n            upFrame,\n            label,\n            style,\n        }\n    ) {\n        super(\n            game,\n            x,\n            y,\n            asset,\n            callback,\n            callbackContext,\n            overFrame,\n            outFrame,\n            downFrame,\n            upFrame\n        );\n\n        this.anchor.setTo(0.5);\n\n        this.label = label;\n        this.style = style;\n        this.text = new Phaser.Text(this.game, 0, 0, this.label, this.style);\n        this.text.anchor.setTo(0.5);\n\n        this.addChild(this.text);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/sprites/textButton.js","//get random integer between a range, but not 0\nexport default function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    const result = Math.floor(Math.random() * (max - min + 1)) + min;\n    if (result === 0) {\n        getRandomInt(min, max);\n    } else\n        return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// src/functions/getRandomInt.js","import 'pixi';\nimport 'p2';\nimport Phaser from 'phaser';\n\nimport BootState from './states/Boot';\nimport SplashState from './states/Splash';\nimport GameState from './states/Game';\nimport GameoverState from './states/Gameover';\nimport config from './config';\n\nexport default class Game extends Phaser.Game {\n    constructor() {\n        super(config.gameWidth, config.gameHeight, Phaser.CANVAS, 'game', null);\n\n        this.state.add('Boot', BootState, false);\n        this.state.add('Splash', SplashState, false);\n        this.state.add('Game', GameState, false);\n        this.state.add('Gameover', GameoverState, false);\n\n        this.state.start('Boot');\n    }\n}\n\n//window.game = new Game();\n\n\n\n// WEBPACK FOOTER //\n// src/game_main.js","import Phaser from 'phaser';\nimport config from '../config';\nimport state from '../states/state';\n//console.log(19, state);\n\nexport default class Player extends Phaser.Sprite {\n    constructor({ game, x, y, asset }) {\n        super(game, x, y, asset);\n        this.game = game;\n        this.anchor.setTo(0, 0);\n        game.physics.arcade.enable(this);\n        this.body.gravity.y = 980;\n        this.body.collideWorldBounds = false;\n        this.body.bounce.y = 0.1;\n\n        this.animations.add('run', [5, 6, 7, 8], 6, true);\n        this.animations.play('run');\n\n        this.speed = 1;\n        game.input.onUp.add(() => {\n            //this.body.velocity.y = -400 / Math.sqrt(this.speed);\n            this.body.velocity.y = -400 + state.speed;\n        });\n\n        const SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\n\n        const startSpeechRecognition = () => {\n            const speechRecognizer = new SpeechRecognition();\n            speechRecognizer.start();\n            speechRecognizer.onresult = event => {\n                const transcript = event.results[0][0].transcript;\n                if (transcript === 'jump') {\n                    console.log(1, transcript);\n                }\n                this.body.velocity.y = -400;\n                speechRecognizer.stop();\n            };\n            speechRecognizer.onspeechend = () => {\n                //console.log('say some more');\n                startSpeechRecognition();\n            };\n            speechRecognizer.onerror = event => {\n                //console.log(400, 'error!!');\n                startSpeechRecognition();\n            };\n        };\n\n        if ('webkitSpeechRecognition' in window) {\n            startSpeechRecognition();\n        } else {\n            alert(\n                'Your browser is not supported. If you are using google chrome, please upgrade!'\n            );\n        }\n    }\n\n    update() {\n        this.speed = $('body').data('speed');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/sprites/player.js","import Phaser from 'phaser';\nimport getRandomInt from '../functions/getRandomInt';\nimport config from '../config';\nimport state from '../states/state';\n//const gameData = $('body').data();\n\nexport default class StaticAsset extends Phaser.Sprite {\n    constructor({ game, x, y, asset }) {\n        super(game, x, y, asset);\n        this.anchor.setTo(0, 0);\n        this.enableBody = true;\n        this.game.physics.arcade.enable(this);\n        this.body.immovable = true;\n        //this.speed = state.speed;\n    }\n\n    update() {\n        //this.speed = $('body').data('speed');\n        this.position.x -= 0.3 + state.speed;\n        //this.position.x -= 1.54;\n\n        if (this.position.x < -300) {\n            this.kill();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/sprites/staticAsset.js","import Phaser from 'phaser';\nimport WebFont from 'webfontloader';\nimport TextButton from '../sprites/textButton';\n\nexport default class BootState extends Phaser.State {\n  init() {\n    this.stage.backgroundColor = '#ddd';\n    this.fontsReady = false;\n    this.fontsLoaded = this.fontsLoaded.bind(this);\n  }\n  preload() {\n    WebFont.load({\n      google: {\n        families: ['Bangers'],\n      },\n      active: this.fontsLoaded,\n    });\n\n    let text = this.add.text(\n      this.world.centerX,\n      this.world.centerY,\n      'loading fonts',\n      { font: '16px Arial', fill: '#dddddd', align: 'center' }\n    );\n    text.anchor.setTo(0.5, 0.5);\n\n    this.load.image('loaderBg', './assets/images/loader-bg.png');\n    this.load.image('loaderBar', './assets/images/loader-bar.png');\n  }\n\n  render() {\n    if (this.fontsReady) {\n      this.state.start('Splash');\n    }\n  }\n\n  fontsLoaded() {\n    this.fontsReady = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/states/Boot.js","/* globals __DEV__ */\nimport Phaser from 'phaser';\nimport StaticAsset from '../sprites/staticAsset';\nimport Player from '../sprites/player';\nimport config from '../config';\nimport getRandomInt from '../functions/getRandomInt';\nimport state from './state';\n\nconst HEIGHT = config.gameHeight;\nconst WIDTH = config.gameWidth;\n\n/*\nconst playerHighestScore = gameData.gameHighestScore !== null\n  ? gameData.gamHighestScore\n  : 0;\n*/\n//console.log(40, gameData.gameHighestScore);\n\nexport default class GameState extends Phaser.State {\n  init() {\n    this.speed = state.speed;\n\n    //initial physics in world\n    this.physics.startSystem(Phaser.Physics.ARCADE);\n\n    //initialize properties for generating ledges\n    let ledgeXPosition = 50;\n    let ledgeYPosition = HEIGHT / 2;\n    let ledgeIndex = 0;\n    let neighbourLedgeHeightDifference = 50;\n\n    //generate ledge and add it to ledge group\n    this.generateLedges = () => {\n      console.log(\n        'ledge',\n        ledgeIndex,\n        ' ',\n        ledgeXPosition,\n        ', ',\n        JSON.stringify(ledgeYPosition)\n      );\n      this.ledge = new StaticAsset({\n        game: this,\n        x: ledgeXPosition,\n        y: ledgeYPosition,\n        asset: 'platform',\n      });\n      this.add.existing(this.ledge);\n      this.ledge.body.checkCollision.down = false;\n      this.ledge.body.checkCollision.left = false;\n      this.ledges.add(this.ledge);\n      ledgeIndex++;\n      //get position for the next ledge to be generated.\n      //if positionY is too high then go lower.\n      //if positionY is too low then go higher.\n\n      if (ledgeIndex <= 3) {\n        ledgeXPosition = ledgeXPosition + 295;\n        this.ledge.scale.setTo(0.65, 0.9);\n      } else {\n        ledgeXPosition = WIDTH + 150;\n        this.ledge.scale.setTo(0.5, 0.9);\n      }\n\n      if (ledgeYPosition < HEIGHT - 100 && ledgeYPosition > 100) {\n        ledgeYPosition = ledgeYPosition +\n          getRandomInt(\n            -neighbourLedgeHeightDifference,\n            neighbourLedgeHeightDifference\n          );\n      } else if (ledgeYPosition > HEIGHT - 100) {\n        ledgeYPosition = ledgeYPosition +\n          getRandomInt(-neighbourLedgeHeightDifference, 0);\n      } else {\n        ledgeYPosition = ledgeYPosition +\n          getRandomInt(0, neighbourLedgeHeightDifference);\n      }\n    };\n  }\n  preload() {}\n\n  create() {\n    //create ledge group\n    this.ledges = this.add.group();\n    this.physics.arcade.enable(this.ledges);\n    this.ledges.enableBody = true;\n\n    //generate initial ledges\n    for (let i = 0; i <= 3; i++) {\n      this.generateLedges();\n    }\n\n    //set the rate to generate ledges\n    //and generate ledges\n    this.ledgeGenerationRate = 1;\n    this.game.time.events.loop(\n      Phaser.Timer.SECOND * (2.5 - this.ledgeGenerationRate),\n      () => {\n        state.speed = Number((state.speed * 1.01).toFixed(3));\n        this.generateLedges();\n      }\n    );\n\n    //create player\n    this.player = new Player({\n      game: this.game,\n      x: 150,\n      y: 30,\n      asset: 'dude',\n    });\n    this.add.existing(this.player);\n\n    //create score\n    this.score = this.game.add.text(WIDTH / 2, 30, 'score: 0', {\n      font: '32px',\n      fill: 'black',\n    });\n    this.timer = 0;\n\n    this.game.time.events.loop(Phaser.Timer.SECOND * 1, () => {\n      this.timer += 100;\n      this.score.text = 'score: ' + this.timer;\n      //this.stateb = state.b;\n      //console.log(300, this.stateb);\n      //$('body').data('speed', this.speed);\n      //console.log(20, $('body').data());\n    });\n  }\n\n  update() {\n    this.physics.arcade.collide(this.player, this.ledges);\n    this.ledgeGenerationRate += 0.00213;\n\n    //game over if player falls out of bottom of screen\n    if (this.player.position.y > HEIGHT + 250) {\n      //check score\n      if (this.timer > state.gameHighestScore) {\n        const SERVER = 'http://localhost:8080/';\n        $.ajax({\n          url: SERVER + 'highestScore',\n        });\n      }\n      //go to game over stage\n      this.state.start('Gameover');\n    }\n  }\n\n  render() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// src/states/Game.js","import Phaser from 'phaser';\nimport TextButton from '../sprites/textButton';\n\nexport default class GameoverState extends Phaser.State {\n  init() {}\n\n  preload() {}\n\n  create() {\n    this.start = new TextButton({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY,\n      asset: 'button',\n    });\n\n    this.add.existing(this.start);\n\n    this.start.onInputDown.add(() => {\n      this.state.start('Game');\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/states/Gameover.js","import Phaser from 'phaser';\nimport { centerGameObjects } from '../utils';\nimport TextButton from '../sprites/textButton';\n\nexport default class SplashState extends Phaser.State {\n  init() {}\n\n  preload() {\n    //this.load.setPreloadSprite(this.loaderBar);\n    this.load.image('sky', 'assets/images/sky.png');\n    this.load.image('star', 'assets/images/star.png');\n    this.load.spritesheet('dude', 'assets/images/dude.png', 32, 48);\n    this.load.image('mushroom', 'assets/images/mushroom2.png');\n    this.load.image('platform', 'assets/images/platform.png');\n    this.load.image('button', 'assets/images/button.png', 40, 10, 3);\n  }\n\n  create() {\n    this.start = new TextButton({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY,\n      label: 'play',\n      asset: 'button',\n      style: {\n        font: '64px',\n        fill: 'white',\n      },\n    });\n    this.start.scale.setTo(0.7, 0.7);\n    this.add.existing(this.start);\n    this.start.onInputDown.add(() => {\n      //this.state.start('Game');\n    });\n    this.state.start('Game');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/states/Splash.js","export const centerGameObjects = objects => {\n    objects.forEach(function(object) {\n        object.anchor.setTo(0.5);\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/utils.js"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AARA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;;;;;;;;;;;;;;;AAiBA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;;;;;;AAEA;AAAA;AACA;AACA;AAFA;AAAA;;;;;;;;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAsBA;AACA;;AAvCA;AACA;AADA;;;;;;;;;;;;;;;;;;ACCA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;;AAXA;AACA;AAYA;AACA;AACA;AAfA;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAAA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AA/CA;AAgDA;AACA;;;AACA;AACA;AACA;;;;AArDA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAAA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAlBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AACA;AAMA;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AAlCA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AAPA;AACA;AACA;AAMA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;;;AAEA;;;;AAjIA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;AACA;;;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;AAlBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA/BA;AACA;AADA;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}