{"version":3,"file":"0.1138f82428ea4c023ffc.hot-update.js","sources":["webpack:///src/actions/actionIndex.js?be52","webpack:///src/app.js?bd9c"],"sourcesContent":["import axios from 'axios';\nimport store from '../store';\n\nconst SERVER = 'http://localhost:8080/';\n\nexport const updateFacebookId = facebookId => ({\n    type: 'UPDATE_FACEBOOKID',\n    payload: facebookId,\n});\n\nexport const newPlayerRegistration = newPlayer =>\n    dispatch => {\n        newPlayer.highestScore = 0;\n        console.log(100);\n        axios\n            .post('http://localhost:8080/users/', newPlayer)\n            .then(data => {\n                dispatch({\n                    type: 'UPDATE_SCREENNAME',\n                    payload: data.data.screenName,\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\nexport const getGameHighestScore = () =>\n    dispatch => {\n        axios\n            .get('http://localhost:8080/highestScore/')\n            .then(data => {\n                const gameHighestScore = data.data.result[0].highestScore;\n                dispatch({\n                    type: 'UPDATE_GAME_HIGHEST_SCORE',\n                    payload: gameHighestScore,\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n\n\n// WEBPACK FOOTER //\n// src/actions/actionIndex.js","/*global fb*/\n\nimport React, { PureComponent } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Game from './game_main';\nimport state from './states/state';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/actionIndex';\nimport Registration from './registration';\nimport axios from 'axios';\nimport $ from 'jquery';\n\nconst SERVER = 'http://localhost:8080/';\n\n/*\nconst startGame = () => {\n    $('#signinScreen').css('display', 'none');\n    console.log(15);\n\n    store.dispatch(actions.newPlayerRegistration());\n\n    const game = new Game();\n    \n    $.ajax({\n        url: SERVER + 'highestScore',\n        type: 'GET',\n        success: data => {\n            state.gameHighestScore = data.result[0].highestScore;\n            //$('body').data('gameHighestScore', gameHighestScore);\n            const game = new Game();\n        },\n        error: e => {\n            console.log(e);\n        },\n    });\n    \n};\n*/\n\nconst { object, func } = PropTypes;\n\nexport default class App extends PureComponent {\n    /*\n    static PropTypes = {\n        gameHighestScore: object,\n        getGameHighestScore: func,\n        newPlayerRegistration: func,\n    };\n\n    static defaultProps = {\n        gameHighestScore: 0,\n        playerData: {},\n    };\n    \n    state = {\n        playerData: {},\n    };\n    */\n\n    constructor() {\n        super();\n\n        this.state = {\n            showRegistration: false,\n        };\n\n        this.playAsAGuest = this.playAsAGuest.bind(this);\n    }\n\n    playAsAGuest(event) {\n        event.preventDefault();\n        const guestPlayer = {\n            highestScore: 0,\n            screenName: 'Guest',\n        };\n        this.startGame();\n    }\n\n    startGame() {\n        $('#signinScreen').css('display', 'none');\n        store.dispatch(actions.getGameHighestScore());\n\n        const game = new Game();\n    }\n\n    componentWillMount() {\n        // This is called with the results from from FB.getLoginStatus().\n        window.fbAsyncInit = () => {\n            FB.init({\n                appId: '113731382506643',\n                cookie: true, // enable cookies to allow the server to access\n                // the session\n                xfbml: true, // parse social plugins on this page\n                version: 'v2.8', // use graph api version 2.8\n            });\n\n            FB.getLoginStatus(response => {\n                if (response.status === 'connected') {\n                    FB.api('/me', response => {\n                        const facebookId = response.id;\n                        store.dispatch(actions.updateFacebookId(facebookId));\n\n                        axios\n                            .get(\n                                'http://localhost:8080/users/facebookId/' +\n                                    facebookId\n                            )\n                            .then(data => {\n                                if (data.data.length === 0) {\n                                    //show registration input box\n                                    this.setState({ showRegistration: true });\n                                } else {\n                                    console.log(14, data);\n                                    this.startGame();\n                                }\n                            })\n                            .catch(e => {\n                                console.log(e);\n                            });\n                    });\n                }\n            });\n        };\n\n        // Load the SDK asynchronously\n        (function(d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) return;\n            js = d.createElement(s);\n            js.id = id;\n            js.src = '//connect.facebook.net/en_US/sdk.js';\n            fjs.parentNode.insertBefore(js, fjs);\n        })(document, 'script', 'facebook-jssdk');\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.showRegistration ? <Registration /> : null}\n                <input\n                    type=\"submit\"\n                    value=\"play as a Guest\"\n                    onClick={this.playAsAGuest}\n                />\n            </div>\n        );\n    }\n}\n/*\nexport default connect(storeState => ({\n    gameHighestScore: storeState.gameHighestScore,\n    playerData: storeState.playerData,\n}));\n*/\n\n\n\n// WEBPACK FOOTER //\n// src/app.js"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAdA;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAdA;AACA;AAcA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AAAA;AACA;AACA;;;AACA;;;;;;;;;;;;;;;;AAiBA;AAAA;AACA;AADA;AACA;AAEA;AACA;AADA;AACA;AAGA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;;;;;AAEA;;;;;;;;AA3GA;;;;A","sourceRoot":""}