{"version":3,"file":"0.144f705fa6088023b9ae.hot-update.js","sources":["webpack:///src/functions/getRandomInt.js?d519","webpack:///src/sprites/player.js?fa37","webpack:///src/sprites/staticAsset.js?c4a8","webpack:///src/states/Game.js?2998"],"sourcesContent":["//get random integer between a range, but not 0\nexport default function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    const result = Math.floor(Math.random() * (max - min + 1)) + min;\n    if (result === 0) {\n        getRandomInt(min, max);\n    } else\n        return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// src/functions/getRandomInt.js","import Phaser from 'phaser';\nimport config from '../config';\nimport state from '../states/state';\n//console.log(19, state);\n\nexport default class Player extends Phaser.Sprite {\n    constructor({ game, x, y, asset }) {\n        super(game, x, y, asset);\n        this.game = game;\n        this.anchor.setTo(0, 0);\n        game.physics.arcade.enable(this);\n        this.body.gravity.y = 980;\n        this.body.collideWorldBounds = false;\n        this.body.bounce.y = 0.1;\n\n        this.animations.add('run', [5, 6, 7, 8], 6, true);\n        this.animations.play('run');\n\n        this.speed = 1;\n        game.input.onUp.add(() => {\n            //this.body.velocity.y = -400 / Math.sqrt(this.speed);\n            this.body.velocity.y = -400 + state.speed;\n        });\n\n        const SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\n\n        const startSpeechRecognition = () => {\n            const speechRecognizer = new SpeechRecognition();\n            speechRecognizer.start();\n            speechRecognizer.onresult = event => {\n                const transcript = event.results[0][0].transcript;\n                if (transcript === 'jump') {\n                    console.log(1, transcript);\n                }\n                this.body.velocity.y = -400;\n                speechRecognizer.stop();\n            };\n            speechRecognizer.onspeechend = () => {\n                //console.log('say some more');\n                startSpeechRecognition();\n            };\n            speechRecognizer.onerror = event => {\n                //console.log(400, 'error!!');\n                startSpeechRecognition();\n            };\n        };\n\n        if ('webkitSpeechRecognition' in window) {\n            startSpeechRecognition();\n        } else {\n            alert(\n                'Your browser is not supported. If you are using google chrome, please upgrade!'\n            );\n        }\n    }\n\n    update() {\n        this.speed = state.speed;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/sprites/player.js","import Phaser from 'phaser';\nimport getRandomInt from '../functions/getRandomInt';\nimport config from '../config';\nimport state from '../states/state';\n//const gameData = $('body').data();\n\nexport default class StaticAsset extends Phaser.Sprite {\n    constructor({ game, x, y, asset }) {\n        super(game, x, y, asset);\n        this.anchor.setTo(0, 0);\n        this.enableBody = true;\n        this.game.physics.arcade.enable(this);\n        this.body.immovable = true;\n        //this.speed = state.speed;\n    }\n\n    update() {\n        //this.speed = $('body').data('speed');\n        this.position.x -= 0.3 + state.speed;\n        //this.position.x -= 1.54;\n\n        if (this.position.x < -300) {\n            this.kill();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/sprites/staticAsset.js","/* globals __DEV__ */\nimport Phaser from 'phaser';\nimport StaticAsset from '../sprites/staticAsset';\nimport Player from '../sprites/player';\nimport config from '../config';\nimport getRandomInt from '../functions/getRandomInt';\nimport state from './state';\nimport store from '../store';\n\nconst HEIGHT = config.gameHeight;\nconst WIDTH = config.gameWidth;\n\nconst abc = store.getState().facebookId;\n\n/*\nconst playerHighestScore = gameData.gameHighestScore !== null\n  ? gameData.gamHighestScore\n  : 0;\n*/\n//console.log(40, gameData.gameHighestScore);\n\nexport default class GameState extends Phaser.State {\n  init() {\n    this.speed = state.speed;\n\n    //initial physics in world\n    this.physics.startSystem(Phaser.Physics.ARCADE);\n\n    //initialize properties for generating ledges\n    let ledgeXPosition = 50;\n    let ledgeYPosition = HEIGHT / 2;\n    let ledgeIndex = 0;\n    let neighbourLedgeHeightDifference = 50;\n\n    //generate ledge and add it to ledge group\n    this.generateLedges = () => {\n      console.log(\n        'ledge',\n        ledgeIndex,\n        ' ',\n        ledgeXPosition,\n        ', ',\n        JSON.stringify(ledgeYPosition)\n      );\n      this.ledge = new StaticAsset({\n        game: this,\n        x: ledgeXPosition,\n        y: ledgeYPosition,\n        asset: 'platform',\n      });\n      this.add.existing(this.ledge);\n      this.ledge.body.checkCollision.down = false;\n      this.ledge.body.checkCollision.left = false;\n      this.ledges.add(this.ledge);\n      ledgeIndex++;\n      //get position for the next ledge to be generated.\n      //if positionY is too high then go lower.\n      //if positionY is too low then go higher.\n\n      if (ledgeIndex <= 3) {\n        ledgeXPosition = ledgeXPosition + 295;\n        this.ledge.scale.setTo(0.65, 0.9);\n      } else {\n        ledgeXPosition = WIDTH + 150;\n        this.ledge.scale.setTo(0.5, 0.9);\n      }\n\n      if (ledgeYPosition < HEIGHT - 100 && ledgeYPosition > 100) {\n        ledgeYPosition = ledgeYPosition +\n          getRandomInt(\n            -neighbourLedgeHeightDifference,\n            neighbourLedgeHeightDifference\n          );\n      } else if (ledgeYPosition > HEIGHT - 100) {\n        ledgeYPosition = ledgeYPosition +\n          getRandomInt(-neighbourLedgeHeightDifference, 0);\n      } else {\n        ledgeYPosition = ledgeYPosition +\n          getRandomInt(0, neighbourLedgeHeightDifference);\n      }\n    };\n  }\n  preload() {}\n\n  create() {\n    //create ledge group\n    this.ledges = this.add.group();\n    this.physics.arcade.enable(this.ledges);\n    this.ledges.enableBody = true;\n\n    //generate initial ledges\n    for (let i = 0; i <= 3; i++) {\n      this.generateLedges();\n    }\n\n    //set the rate to generate ledges\n    //and generate ledges\n    this.ledgeGenerationRate = 1;\n    this.game.time.events.loop(\n      Phaser.Timer.SECOND * (2.5 - this.ledgeGenerationRate),\n      () => {\n        state.speed = Number((state.speed * 1.01).toFixed(3));\n        this.generateLedges();\n      }\n    );\n\n    //create player\n    this.player = new Player({\n      game: this.game,\n      x: 150,\n      y: 30,\n      asset: 'dude',\n    });\n    this.add.existing(this.player);\n\n    //create score\n    this.score = this.game.add.text(WIDTH / 2, 30, 'score: 0', {\n      font: '32px',\n      fill: 'black',\n    });\n    this.timer = 0;\n\n    this.game.time.events.loop(Phaser.Timer.SECOND * 1, () => {\n      this.timer += 100;\n      this.score.text = 'score: ' + this.timer;\n    });\n  }\n\n  update() {\n    this.physics.arcade.collide(this.player, this.ledges);\n    this.ledgeGenerationRate += 0.00213;\n\n    //game over if player falls out of bottom of screen\n    if (this.player.position.y > HEIGHT + 250) {\n      //check score\n\n      //go to game over stage\n      this.state.start('Gameover');\n    }\n  }\n\n  render() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// src/states/Game.js"],"mappings":";;;;;;;;;;;;;;;;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAAA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AA/CA;AAgDA;AACA;;;AACA;AACA;AACA;;;;AArDA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAAA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAlBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AARA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;;;;AAxHA;AACA;AADA;;;;A","sourceRoot":""}